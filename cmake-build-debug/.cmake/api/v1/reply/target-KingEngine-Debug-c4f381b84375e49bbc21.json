{
	"artifacts" : 
	[
		{
			"path" : "KingEngine.exe"
		},
		{
			"path" : "KingEngine.pdb"
		}
	],
	"backtrace" : 1,
	"backtraceGraph" : 
	{
		"commands" : 
		[
			"add_executable",
			"include_directories"
		],
		"files" : 
		[
			"CMakeLists.txt"
		],
		"nodes" : 
		[
			{
				"file" : 0
			},
			{
				"command" : 0,
				"file" : 0,
				"line" : 9,
				"parent" : 0
			},
			{
				"command" : 1,
				"file" : 0,
				"line" : 6,
				"parent" : 0
			},
			{
				"command" : 1,
				"file" : 0,
				"line" : 7,
				"parent" : 0
			}
		]
	},
	"compileGroups" : 
	[
		{
			"compileCommandFragments" : 
			[
				{
					"fragment" : "-g -std=gnu++14 -fdiagnostics-color=always"
				}
			],
			"includes" : 
			[
				{
					"backtrace" : 2,
					"path" : "C:/Users/conno/CLionProjects/KingEngine/src/stubs"
				},
				{
					"backtrace" : 3,
					"path" : "C:/Users/conno/CLionProjects/KingEngine/src/subsystems"
				}
			],
			"language" : "CXX",
			"languageStandard" : 
			{
				"backtraces" : 
				[
					1
				],
				"standard" : "14"
			},
			"sourceIndexes" : 
			[
				0,
				1,
				2,
				3,
				4,
				5,
				6,
				8,
				10,
				14,
				15,
				17
			]
		}
	],
	"id" : "KingEngine::@6890427a1f51a3e7e1df",
	"link" : 
	{
		"commandFragments" : 
		[
			{
				"fragment" : "-g",
				"role" : "flags"
			},
			{
				"fragment" : "",
				"role" : "flags"
			},
			{
				"fragment" : "-lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32",
				"role" : "libraries"
			}
		],
		"language" : "CXX"
	},
	"name" : "KingEngine",
	"nameOnDisk" : "KingEngine.exe",
	"paths" : 
	{
		"build" : ".",
		"source" : "."
	},
	"sourceGroups" : 
	[
		{
			"name" : "Source Files",
			"sourceIndexes" : 
			[
				0,
				1,
				2,
				3,
				4,
				5,
				6,
				8,
				10,
				14,
				15,
				17
			]
		},
		{
			"name" : "Header Files",
			"sourceIndexes" : 
			[
				7,
				9,
				11,
				12,
				13,
				16
			]
		}
	],
	"sources" : 
	[
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "src/stubs/destination_sys_test/listener.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "src/stubs/destination_sys_test/speaker.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "src/stubs/fix_ipc_utility/main.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "src/stubs/notif_sys_test/notifier.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "src/stubs/notif_sys_test/waiter.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "src/stubs/python_test/reader.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "src/stubs/destination.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"path" : "src/stubs/destination.hpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "src/stubs/location.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"path" : "src/stubs/location.hpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "src/stubs/notif_sys.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"path" : "src/stubs/notif_sys.hpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"path" : "src/stubs/transfer_types.hpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"path" : "src/stubs/util.hpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "src/subsystems/Collection.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "src/subsystems/Hopper.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"path" : "src/subsystems/Hopper.h",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "src/main.cpp",
			"sourceGroupIndex" : 0
		}
	],
	"type" : "EXECUTABLE"
}
